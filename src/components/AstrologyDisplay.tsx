import React from 'react';
import {
  BasicAstrologyJsonResponse,
  DetailedAstrologyJsonResponse,
  AstrologyDisplayProps,
} from '@/types/astrology';

// Style c√≥ th·ªÉ ƒë∆∞·ª£c qu·∫£n l√Ω t·ªët h∆°n b·∫±ng CSS Modules, Tailwind, ho·∫∑c Styled Components
const styles: { [key: string]: React.CSSProperties } = {
  container: {
    fontFamily: 'Arial, sans-serif',
    lineHeight: 1.6,
    padding: '20px',
    border: '1px solid #ccc',
    borderRadius: '8px',
    backgroundColor: '#f9f9f9',
    maxWidth: '800px',
    margin: '20px auto',
    color: '#333', // M√†u ch·ªØ m·∫∑c ƒë·ªãnh
  },
  loading: { textAlign: 'center', fontSize: '1.2em', color: '#555' },
  error: {
    textAlign: 'center', fontSize: '1.1em', color: 'red',
    border: '1px solid red', padding: '10px', borderRadius: '4px',
    backgroundColor: '#ffebee',
  },
  section: {
    marginBottom: '25px',
    paddingBottom: '15px',
    borderBottom: '1px dashed #eee',
  },
  lastSection: { marginBottom: '0', paddingBottom: '0', borderBottom: 'none' },
  heading: {
    color: '#222', // ƒê·∫≠m h∆°n ch√∫t
    fontSize: '1.3em', // H∆°i nh·ªè h∆°n
    marginBottom: '10px',
    borderBottom: '2px solid #eee',
    paddingBottom: '5px',
    fontWeight: 'bold',
  },
  subHeading: {
    color: '#444', fontSize: '1.15em', marginTop: '15px',
    marginBottom: '8px', fontWeight: '600'
  },
  content: { color: '#555', whiteSpace: 'pre-wrap' }, // Gi·ªØ pre-wrap
  note: {
    marginTop: '20px', padding: '15px', backgroundColor: '#fffbe6',
    border: '1px solid #ffe58f', borderRadius: '4px', color: '#8a6d3b',
    fontSize: '0.95em',
  },
  noteTitle: { fontWeight: 'bold', display: 'block', marginBottom: '5px' },
  subsectionsContainer: { display: 'flex', flexDirection: 'column', gap: '15px' }, // Gi·∫£m gap
  subsection: {
    padding: '15px', border: '1px solid #ddd', borderRadius: '8px',
    // B·ªè background gradient ph·ª©c t·∫°p ƒë·ªÉ d·ªÖ ƒë·ªçc h∆°n, c√≥ th·ªÉ th√™m l·∫°i n·∫øu mu·ªën
    backgroundColor: '#fff',
    boxShadow: '0 1px 3px rgba(0,0,0,0.05)',
  },
  // Style cho t·ª´ng subsection c√≥ th·ªÉ ƒë∆°n gi·∫£n h√≥a ho·∫∑c d√πng class
  subsectionCongDanh: { borderColor: '#4a90e2' },
  subsectionTaiLoc: { borderColor: '#50e3c2' },
  subsectionTinhDuyen: { borderColor: '#e91e63' },
  subsectionSucKhoe: { borderColor: '#f5a623' },
};

// H√†m ki·ªÉm tra xem c√≥ ph·∫£i l√† k·∫øt qu·∫£ chi ti·∫øt kh√¥ng
function isDetailedReading(
  data: any
): data is DetailedAstrologyJsonResponse {
  // Ki·ªÉm tra s·ª± t·ªìn t·∫°i c·ªßa m·ªôt tr∆∞·ªùng ch·ªâ c√≥ trong b·∫£n chi ti·∫øt
  return data && typeof data === 'object' && 'gioiThieuChung' in data;
}

// Helper components ƒë·ªÉ c·∫£i thi·ªán t√°i s·ª≠ d·ª•ng code
const Section: React.FC<{ title: string; children: React.ReactNode; isLast?: boolean }> = ({ title, children, isLast }) => (
  <section className={`py-4 ${!isLast ? 'border-b border-border/30' : ''}`}>
    <h2 className="text-xl md:text-2xl font-semibold text-foreground mb-3 pb-2 border-b border-border/50">{title}</h2>
    <div className="text-foreground/90 space-y-3 whitespace-pre-wrap leading-relaxed">
      {children}
    </div>
  </section>
);

const SubSection: React.FC<{ title: string; icon?: string; children: React.ReactNode; borderColorClass?: string }> = 
  ({ title, icon, children, borderColorClass = 'border-border' }) => (
  <div className={`bg-card/50 p-4 rounded-lg border-l-4 ${borderColorClass} shadow-sm`}>
    <h3 className="text-lg font-semibold text-foreground mb-2">
      {icon && <span className="mr-2">{icon}</span>}
      {title}
    </h3>
    <div className="text-muted-foreground whitespace-pre-wrap leading-relaxed">
      {children}
    </div>
  </div>
);

const AstrologyDisplay: React.FC<AstrologyDisplayProps> = ({
  readingData,
  isLoading,
  error,
}) => {
  if (isLoading) {
    return (
      <div className="max-w-4xl mx-auto p-4 md:p-6 bg-card/50 border border-border rounded-lg shadow-sm">
        <div className="text-center text-muted-foreground py-10">
          <p className="text-lg animate-pulse">ƒêang t·∫£i ph√¢n t√≠ch t·ª≠ vi...</p>
        </div>
      </div>
    );
  }

  if (error) {
    // Hi·ªÉn th·ªã l·ªói th√¢n thi·ªán h∆°n n·∫øu ƒë√≥ l√† l·ªói parsing ho·∫∑c API
    const displayError = error.includes("Kh√¥ng th·ªÉ ƒë·ªçc ƒë∆∞·ª£c k·∫øt qu·∫£")
      ? "ƒê√£ c√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω d·ªØ li·ªáu t·ª≠ vi. N·ªôi dung c√≥ th·ªÉ kh√¥ng ƒë·∫ßy ƒë·ªß ho·∫∑c kh√¥ng ch√≠nh x√°c. Vui l√≤ng th·ª≠ l·∫°i."
      : `L·ªói: ${error}`;
    return (
      <div className="max-w-4xl mx-auto p-4 md:p-6">
        <div className="bg-destructive/10 border border-destructive text-destructive p-4 rounded-md" role="alert">
          <h4 className="font-bold mb-2">L·ªói</h4>
          <p>{displayError}</p>
        </div>
      </div>
    );
  }

  if (!readingData) {
    return (
      <div className="max-w-4xl mx-auto p-4 md:p-6 bg-card/50 border border-border rounded-lg shadow-sm">
        <p className="text-center text-muted-foreground py-10">Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ hi·ªÉn th·ªã.</p>
      </div>
    );
  }

  // ---- Hi·ªÉn th·ªã k·∫øt qu·∫£ chi ti·∫øt ----
  if (isDetailedReading(readingData)) {
    const data = readingData;
    return (
      <div className="bg-card border border-border rounded-lg p-4 md:p-6 lg:p-8 shadow-lg max-w-4xl mx-auto space-y-6">
        {data.gioiThieuChung && <Section title="Gi·ªõi thi·ªáu chung"><p>{data.gioiThieuChung}</p></Section>}
        {data.canChiVaLichAm && <Section title="Can Chi v√† L·ªãch √Çm"><p>{data.canChiVaLichAm}</p></Section>}
        {data.napAmAmDuongMang && <Section title="N·∫°p √Çm, √Çm D∆∞∆°ng, M·∫°ng"><p>{data.napAmAmDuongMang}</p></Section>}
        {data.yeuToCoDinh && <Section title="Y·∫øu T·ªë C·ªë ƒê·ªãnh"><p>{data.yeuToCoDinh}</p></Section>}
        {data.cungMenhThan && <Section title="Cung M·ªánh / Th√¢n"><p>{data.cungMenhThan}</p></Section>}
        {data.saoChinhVaYnghia && <Section title="Sao Ch√≠nh v√† √ù Nghƒ©a"><p>{data.saoChinhVaYnghia}</p></Section>}

        {/* V·∫≠n M·ªánh T·ªïng Quan */}
        <Section title="V·∫≠n M·ªánh T·ªïng Quan">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
            {data.vanMenhTongQuan?.congDanh && 
              <SubSection title="C√¥ng Danh" icon="üíº" borderColorClass="border-blue-500">
                <p>{data.vanMenhTongQuan.congDanh}</p>
              </SubSection>
            }
            {data.vanMenhTongQuan?.taiLoc && 
              <SubSection title="T√†i L·ªôc" icon="üí∞" borderColorClass="border-green-500">
                <p>{data.vanMenhTongQuan.taiLoc}</p>
              </SubSection>
            }
            {data.vanMenhTongQuan?.tinhDuyen && 
              <SubSection title="T√¨nh Duy√™n" icon="‚ù§Ô∏è" borderColorClass="border-pink-500">
                <p>{data.vanMenhTongQuan.tinhDuyen}</p>
              </SubSection>
            }
            {data.vanMenhTongQuan?.sucKhoe && 
              <SubSection title="S·ª©c Kh·ªèe" icon="üè•" borderColorClass="border-yellow-500">
                <p>{data.vanMenhTongQuan.sucKhoe}</p>
              </SubSection>
            }
          </div>
        </Section>

        {data.ketLuanVaLoiKhuyen && 
          <Section title="K·∫øt Lu·∫≠n v√† L·ªùi Khuy√™n" isLast={!data.luuY}>
            <p>{data.ketLuanVaLoiKhuyen}</p>
          </Section>
        }

        {data.luuY && (
          <div className="mt-6 bg-amber-50 border border-amber-300 text-amber-800 p-4 rounded-md text-sm">
            <p><strong className="font-semibold block mb-1">L∆∞u √Ω quan tr·ªçng:</strong></p>
            <p className="whitespace-pre-wrap leading-relaxed">{data.luuY}</p>
          </div>
        )}
      </div>
    );
  }

  // ---- Hi·ªÉn th·ªã k·∫øt qu·∫£ c∆° b·∫£n ----
  // N·∫øu kh√¥ng ph·∫£i detailed th√¨ m·∫∑c ƒë·ªãnh l√† basic
  const data = readingData as BasicAstrologyJsonResponse;
  return (
    <div className="bg-card border border-border rounded-lg p-4 md:p-6 lg:p-8 shadow-lg max-w-4xl mx-auto space-y-6">
      {data.tongQuan && <Section title="T·ªïng Quan"><p>{data.tongQuan}</p></Section>}
      {data.diemNoiBat && <Section title="ƒêi·ªÉm N·ªïi B·∫≠t" isLast={!data.luuY}><p>{data.diemNoiBat}</p></Section>}
      {data.luuY && (
        <div className="mt-6 bg-amber-50 border border-amber-300 text-amber-800 p-4 rounded-md text-sm">
          <p><strong className="font-semibold block mb-1">L∆∞u √Ω:</strong></p>
          <p className="whitespace-pre-wrap leading-relaxed">{data.luuY}</p>
        </div>
      )}
    </div>
  );
};

export default AstrologyDisplay; 